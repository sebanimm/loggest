// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

// model User {
//   id        Int            @id @default(autoincrement())
//   email     String         @unique
//   name      String
//   avatarUrl String
//   googleId  String?        @unique
//   githubId  String?        @unique
//   posts     Post[]
//   readPosts UserReadPost[]
//   stars     Star[]
//   comments  Comment[]
// }

// model Post {
//   id          Int            @id @default(autoincrement())
//   createdAt   DateTime       @default(now())
//   title       String
//   content     String
//   authorId    Int
//   author      User           @relation(fields: [authorId], references: [id])
//   readByUsers UserReadPost[]
//   stars       Star[]
//   comments    Comment[]
// }

// model UserReadPost {
//   id     Int      @id @default(autoincrement())
//   readAt DateTime @default(now())
//   userId Int
//   postId Int
//   user   User     @relation(fields: [userId], references: [id])
//   post   Post     @relation(fields: [postId], references: [id])

//   @@unique([userId, postId])
// }

// model Star {
//   id     Int  @id @default(autoincrement())
//   userId Int
//   postId Int
//   user   User @relation(fields: [userId], references: [id])
//   post   Post @relation(fields: [postId], references: [id])

//   @@unique([userId, postId])
// }

// model Comment {
//   id      Int    @id @default(autoincrement())
//   content String
//   postId  Int
//   userId  Int
//   post    Post   @relation(fields: [postId], references: [id])
//   user    User   @relation(fields: [userId], references: [id])
// }
